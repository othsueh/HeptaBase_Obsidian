{
	"nodes":[
		{"type":"file","file":"🥏Permanent Note/JS Learned.md","id":"6a631266d9ac36ec","x":0,"y":0,"width":400,"height":400},
		{"type":"text","text":"# Type of Function\n> function in JS is actually object","id":"809549061db7c126","x":436,"y":-160,"width":384,"height":106},
		{"type":"text","text":"# this\n> `this` keyword works depends on how function are called.\n\n**In Function** : undefined \n**In Method** : object\n\n","id":"a884f4db1b953a12","x":480,"y":15,"width":500,"height":216},
		{"type":"text","text":"# .call()\n> We use `call()` method to give the function a this object\n\n```js\nfunc.call(thisObj,otherParameters);\n```","id":"7c397cc3e8f8735e","x":1080,"y":-190,"width":400,"height":205},
		{"type":"text","text":"# .apply()\n>The siblings of `call()` method, parameter is an array\n\n```js\nfunc.apply(thisObj,[otherParameters]);\n```","id":"a2002a446c0aeced","x":1080,"y":15,"width":400,"height":229},
		{"type":"text","text":"# .bind()\n> Create a new function with thisObj, otherparameters ...\n\n```js\nnewFunc = func.bind(thisObj);\nnewFunc(otherParameters);\n```","id":"6f36f9389a07cc25","x":1080,"y":244,"width":420,"height":229},
		{"type":"text","text":"# IIFE\n> Immediately Invoked Function Expression\n\n**Differnce**: When declare the function, the function also works.(Work once)\n```js \n(function hello(){\n\tconsole.log('Hello');\n})()\n```","id":"72d1fe2d5e17759e","x":480,"y":251,"width":480,"height":298},
		{"type":"text","text":"# Closure\n> A function backpack, which give you access to use all things in the function with independent variables environment.\n\n```js\nfunction howDogs(){\n\tlet count = 0;\n\treturn function(){\n\t\tcount++;\n\t\tconsole.log(`You have ${count} dogs now!`);\n\t}\n}\nconst dog2 = howDogs();\ndog2(); //1\ndog2(); //2\n```","id":"af7554afd4f253d4","x":480,"y":580,"width":520,"height":450},
		{"type":"text","text":"# ... (Spread Operator)\n> Devide elements in string/array to independent value\n\n```js\nconst disney = ['d','i','s','n','e','y'];\nconsole.log(disney);//array type\nconsole.log(...disney);//char type\n```","id":"9087ca9f860b541d","x":1061,"y":863,"width":499,"height":217},
		{"type":"text","text":"# ... (rest Operator)\n> Parameter for function to use unknown number of paramters.\n\n```js\nfunction sum(…numbers) { \n\tconst result = 0; \n\tnumbers.forEach(function (number) { \n\tresult += number; \n\t}) \n\treturn result \n\t} \nsum(1) // 1 \nsum(1, 2, 3, 4, 5) // 15\n```","id":"5bf6d29914be736c","x":1061,"y":1100,"width":560,"height":360},
		{"type":"text","text":"# Destructuring\n>Use multiple variables to store multiple values with array or object\n\n```js\nconst magic = [0,1,1,0];\nconst [m1,m2,...m3] = magic; //m1 : 0 ; m2 : 1 ; m3 :[]\n```","id":"96e3a8f97fd00a09","x":1061,"y":1540,"width":560,"height":229},
		{"type":"text","text":"# includes() \n>check the part is existing or not existing in the string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.includes(\"I\"));\n```","id":"06e339737c318edb","x":4178,"y":875,"width":477,"height":205},
		{"id":"5cda663012af5684","x":4167,"y":1120,"width":491,"height":200,"type":"text","text":"# startsWith()\n>Check if the parameter is the start of the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.startsWith('I')); //true\n```"},
		{"id":"8eb6ff522fc0d69b","x":4167,"y":1360,"width":483,"height":255,"type":"text","text":"# split()\n>split part of the string by paramter, if parameter exist in the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconst [first,second,third] = us.split(\" \");\nconsole.log(first,second,third);//I LIKE YOU\n```"},
		{"id":"1c2ecd28f892131f","x":4167,"y":1640,"width":450,"height":205,"type":"text","text":"# join()\n>connect multiple string with the parameter\n\n```js\nconst nus = [first,second,third].join(\"+\");\nconsole.log(nus);\n```"},
		{"id":"d9061e01e4a7c29e","x":4167,"y":1880,"width":512,"height":229,"type":"text","text":"# padStart()\n>If string length is smaller than first parameter, then filled second parameter at the start of the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.padStart(12,\"I\"));//III LIKE YOU\n```"},
		{"type":"text","text":"# slice()\n>slice part from the string\n\n**First parameter** : start index\n**Second parameter** : end index(not included)\n=> default is the end of the string\n```js\nconst us = \"The United States of America\";\nconsole.log(us.slice(4,10)); //United\n```","id":"bbedff883f744e22","x":4178,"y":-290,"width":460,"height":301},
		{"type":"text","text":"# trim()\n>clean whitespace of the start and the end of the string\n\n```js\nconst us = \" USA \";\nconsole.log(us.trim()); //USA\n```","id":"69c7f4b2f9015f7c","x":4178,"y":70,"width":452,"height":223},
		{"type":"text","text":"# replace()\n>replace existing part in a string with new char or string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.replace('I','E'));//E LIKE YOU\n```","id":"3b26f13817622e8b","x":4178,"y":327,"width":496,"height":199},
		{"type":"text","text":"# replaceAll()\n>replace all same existing part in a string with new char or string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.replaceAll('I','E'));//E LEKE YOU\n//===regex way\nconsole.log(us.replace(/I/g,'E'));\n```","id":"ac024de93f46222e","x":4167,"y":560,"width":500,"height":279},
		{"type":"text","text":"# string method\n- `indexOf()`\n- `lastIndexOf()`\n- `slice()`\n- `trim()`\n- `replace()`\n- `replaceAll()`\n- `toUpperCase()`\n- `toLowerCase()`\n- `includes()`\n- `startsWith()`\n- `endsWith()`\n- `split()`\n- `join()`\n- `padStart()`\n- `padEnd()`\n- `repeat()`","id":"16a08ca3cf7c680c","x":3040,"y":526,"width":280,"height":566},
		{"type":"text","text":"# map\n```js\nconst mmap = new Map();\nmmap.set(3,5);\nmmap.set('hello','world');\n//==============\nconst mmap = new Map(\n['hello','world'],\n[3,5],\n[[1,2],true],\n[true,'nice']\n)\n```","id":"526090bea8024616","x":1988,"y":-930,"width":419,"height":331},
		{"type":"text","text":"# ?. Optional Chain \n>Check the exist of mother object before check deeper element\n\n**Unlike direct access, it will not report error, instead undefined**\n\n```js\nconst test = obj.first?.second\n```","id":"7f2fd4381522f41a","x":1409,"y":-1320,"width":469,"height":281},
		{"type":"text","text":"# set\n```js\nconst numset = new Set([1,2,3,4]);\n```","id":"d75324ffd34ac72c","x":1948,"y":-1250,"width":425,"height":141},
		{"type":"text","text":"# .add()\n```js\nnumset.add(5);\nconsole.log(numset)//1,2,3,4,5\n```","id":"5ede50255234a3e9","x":2755,"y":-1350,"width":425,"height":131},
		{"type":"text","text":"# .has()\n```js\nnumset.has(0);//false\n```","id":"c9d3e9b67fbc0bb7","x":2755,"y":-1109,"width":266,"height":111},
		{"type":"text","text":"# .delete()\n```js\nnumset.delete(3);\nconsole.log(numset)//1,2,4,5\n```","id":"cab381b92ffb6828","x":2748,"y":-969,"width":407,"height":137},
		{"type":"text","text":"# .get()\n```js\nmmap.get('hello');//world\n```","id":"f8bff971967f42ec","x":2755,"y":-765,"width":328,"height":111},
		{"type":"text","text":"# .keys()\n>Get the keys of an array or object","id":"598acdb79c34dc2e","x":3367,"y":-560,"width":400,"height":103},
		{"type":"text","text":"# .entries()\n>Get the entries of an array or object\n\n```js\nconst num = [1,2,3,4,5,6,7,8,9];\nfor(const [key,value] of num.entries()) \n\tconsole.log([key,value]);//[0,1],[1,2]...\n```","id":"db293a2db2e21d23","x":2668,"y":-540,"width":599,"height":225},
		{"type":"text","text":"# .values()\n>Get the values of an array or object","id":"9e553aabf9bb5017","x":3367,"y":-427,"width":346,"height":137},
		{"id":"26133fafd5d185d7","x":2229,"y":1621,"width":431,"height":222,"type":"text","text":"# Array method \n>some array method is same as string method, so the repeat one will not show again.\n\n- `reverse()`\n- `concat()`\n"},
		{"id":"86654fc261e2b550","x":2909,"y":1576,"width":250,"height":174,"type":"text","text":"# reverse()\n>reverse the array\n\n```js\nconst num4 = num3.reverse();\nconsole.log(num4)/\n```"},
		{"id":"ba817365d97b0857","x":2909,"y":1793,"width":351,"height":252,"type":"text","text":"# concat()\n>connect two array\n\n```js\nconst num1 = [1,2];\nconst num2 = [3,4];\nconst num3 = num1.concat(num2);\nconsole.log(num3);//[1,2,3,4]\n```"}
	],
	"edges":[
		{"id":"e0a15b39813d7aad","fromNode":"a884f4db1b953a12","fromSide":"right","toNode":"7c397cc3e8f8735e","toSide":"left"},
		{"id":"cbfac21deb60f6ef","fromNode":"a884f4db1b953a12","fromSide":"right","toNode":"a2002a446c0aeced","toSide":"left"},
		{"id":"c5cc719810f5f030","fromNode":"6f36f9389a07cc25","fromSide":"left","toNode":"a884f4db1b953a12","toSide":"right"},
		{"id":"e7d8670238e7058b","fromNode":"db293a2db2e21d23","fromSide":"right","toNode":"598acdb79c34dc2e","toSide":"left"},
		{"id":"d3bbe6b452b80201","fromNode":"db293a2db2e21d23","fromSide":"right","toNode":"9e553aabf9bb5017","toSide":"left"},
		{"id":"d2b15e3dcef05e2c","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"5ede50255234a3e9","toSide":"left"},
		{"id":"baad42e20cf30fe4","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"c9d3e9b67fbc0bb7","toSide":"left"},
		{"id":"1183b7fc6383d488","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"cab381b92ffb6828","toSide":"left"},
		{"id":"ae679fe03392f593","fromNode":"526090bea8024616","fromSide":"right","toNode":"f8bff971967f42ec","toSide":"left"},
		{"id":"734c818f8da4217b","fromNode":"526090bea8024616","fromSide":"right","toNode":"cab381b92ffb6828","toSide":"left"},
		{"id":"48365857e5504ce3","fromNode":"c9d3e9b67fbc0bb7","fromSide":"left","toNode":"526090bea8024616","toSide":"right"},
		{"id":"5ad31fdabb86cb71","fromNode":"526090bea8024616","fromSide":"right","toNode":"db293a2db2e21d23","toSide":"left"},
		{"id":"745a0ffb22e6192a","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"bbedff883f744e22","toSide":"left"},
		{"id":"8c98cecf8805a054","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"69c7f4b2f9015f7c","toSide":"left"},
		{"id":"3dfbe960d9754e58","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"3b26f13817622e8b","toSide":"left"},
		{"id":"7ec3dde37c4c8c50","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"ac024de93f46222e","toSide":"left"},
		{"id":"fb963f429c3368c9","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"06e339737c318edb","toSide":"left"},
		{"id":"f0600b8d28a1ad7e","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"5cda663012af5684","toSide":"left"},
		{"id":"c4ab3067e90bbdb1","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"8eb6ff522fc0d69b","toSide":"left"},
		{"id":"87396cdb34b55566","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"1c2ecd28f892131f","toSide":"left"},
		{"id":"9ddf599e86b62641","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"d9061e01e4a7c29e","toSide":"left"},
		{"id":"fcba8251470aad6b","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"86654fc261e2b550","toSide":"left"},
		{"id":"ad46a8690ced65b0","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"ba817365d97b0857","toSide":"left"}
	]
}