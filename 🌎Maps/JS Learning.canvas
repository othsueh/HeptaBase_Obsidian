{
	"nodes":[
		{"type":"file","file":"🥏Permanent Note/JS Learned.md","id":"6a631266d9ac36ec","x":0,"y":0,"width":400,"height":400},
		{"type":"text","text":"# Type of Function\n> function in JS is actually object","id":"809549061db7c126","x":436,"y":-160,"width":384,"height":106},
		{"type":"text","text":"# this\n> `this` keyword works depends on how function are called.\n\n**In Function** : undefined \n**In Method** : object\n\n","id":"a884f4db1b953a12","x":480,"y":15,"width":500,"height":216},
		{"type":"text","text":"# .call()\n> We use `call()` method to give the function a this object\n\n```js\nfunc.call(thisObj,otherParameters);\n```","id":"7c397cc3e8f8735e","x":1080,"y":-190,"width":400,"height":205},
		{"type":"text","text":"# .apply()\n>The siblings of `call()` method, parameter is an array\n\n```js\nfunc.apply(thisObj,[otherParameters]);\n```","id":"a2002a446c0aeced","x":1080,"y":15,"width":400,"height":229},
		{"type":"text","text":"# .bind()\n> Create a new function with thisObj, otherparameters ...\n\n```js\nnewFunc = func.bind(thisObj);\nnewFunc(otherParameters);\n```","id":"6f36f9389a07cc25","x":1080,"y":244,"width":420,"height":229},
		{"type":"text","text":"# IIFE\n> Immediately Invoked Function Expression\n\n**Differnce**: When declare the function, the function also works.(Work once)\n```js \n(function hello(){\n\tconsole.log('Hello');\n})()\n```","id":"72d1fe2d5e17759e","x":480,"y":251,"width":480,"height":298},
		{"type":"text","text":"# Closure\n> A function backpack, which give you access to use all things in the function with independent variables environment.\n\n```js\nfunction howDogs(){\n\tlet count = 0;\n\treturn function(){\n\t\tcount++;\n\t\tconsole.log(`You have ${count} dogs now!`);\n\t}\n}\nconst dog2 = howDogs();\ndog2(); //1\ndog2(); //2\n```","id":"af7554afd4f253d4","x":480,"y":580,"width":520,"height":450},
		{"type":"text","text":"# ... (Spread Operator)\n> Devide elements in string/array to independent value\n\n```js\nconst disney = ['d','i','s','n','e','y'];\nconsole.log(disney);//array type\nconsole.log(...disney);//char type\n```","id":"9087ca9f860b541d","x":1061,"y":863,"width":499,"height":217},
		{"type":"text","text":"# ... (rest Operator)\n> Parameter for function to use unknown number of paramters.\n\n```js\nfunction sum(…numbers) { \n\tconst result = 0; \n\tnumbers.forEach(function (number) { \n\tresult += number; \n\t}) \n\treturn result \n\t} \nsum(1) // 1 \nsum(1, 2, 3, 4, 5) // 15\n```","id":"5bf6d29914be736c","x":1061,"y":1100,"width":560,"height":360},
		{"type":"text","text":"# Destructuring\n>Use multiple variables to store multiple values with array or object\n\n```js\nconst magic = [0,1,1,0];\nconst [m1,m2,...m3] = magic; //m1 : 0 ; m2 : 1 ; m3 :[]\n```","id":"96e3a8f97fd00a09","x":1061,"y":1540,"width":560,"height":229},
		{"type":"text","text":"# includes() \n>check the part is existing or not existing in the string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.includes(\"I\"));\n```","id":"06e339737c318edb","x":4178,"y":875,"width":477,"height":205},
		{"type":"text","text":"# startsWith()\n>Check if the parameter is the start of the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.startsWith('I')); //true\n```","id":"5cda663012af5684","x":4167,"y":1120,"width":491,"height":200},
		{"type":"text","text":"# split()\n>split part of the string by paramter, if parameter exist in the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconst [first,second,third] = us.split(\" \");\nconsole.log(first,second,third);//I LIKE YOU\n```","id":"8eb6ff522fc0d69b","x":4167,"y":1360,"width":483,"height":255},
		{"type":"text","text":"# join()\n>connect multiple string with the parameter\n\n```js\nconst nus = [first,second,third].join(\"+\");\nconsole.log(nus);\n```","id":"1c2ecd28f892131f","x":4167,"y":1640,"width":450,"height":205},
		{"type":"text","text":"# padStart()\n>If string length is smaller than first parameter, then filled second parameter at the start of the string.\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.padStart(12,\"I\"));//III LIKE YOU\n```","id":"d9061e01e4a7c29e","x":4167,"y":1880,"width":512,"height":229},
		{"type":"text","text":"# slice()\n>slice part from the string\n\n**First parameter** : start index\n**Second parameter** : end index(not included)\n=> default is the end of the string\n```js\nconst us = \"The United States of America\";\nconsole.log(us.slice(4,10)); //United\n```","id":"bbedff883f744e22","x":4178,"y":-290,"width":460,"height":301},
		{"type":"text","text":"# trim()\n>clean whitespace of the start and the end of the string\n\n```js\nconst us = \" USA \";\nconsole.log(us.trim()); //USA\n```","id":"69c7f4b2f9015f7c","x":4178,"y":70,"width":452,"height":223},
		{"type":"text","text":"# replace()\n>replace existing part in a string with new char or string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.replace('I','E'));//E LIKE YOU\n```","id":"3b26f13817622e8b","x":4178,"y":327,"width":496,"height":199},
		{"type":"text","text":"# replaceAll()\n>replace all same existing part in a string with new char or string\n\n```js\nconst us = \"I LIKE YOU\";\nconsole.log(us.replaceAll('I','E'));//E LEKE YOU\n//===regex way\nconsole.log(us.replace(/I/g,'E'));\n```","id":"ac024de93f46222e","x":4167,"y":560,"width":500,"height":279},
		{"type":"text","text":"# string method\n- `indexOf()`\n- `lastIndexOf()`\n- `slice()`\n- `trim()`\n- `replace()`\n- `replaceAll()`\n- `toUpperCase()`\n- `toLowerCase()`\n- `includes()`\n- `startsWith()`\n- `endsWith()`\n- `split()`\n- `join()`\n- `padStart()`\n- `padEnd()`\n- `repeat()`","id":"16a08ca3cf7c680c","x":3040,"y":526,"width":280,"height":566},
		{"type":"text","text":"# map\n```js\nconst mmap = new Map();\nmmap.set(3,5);\nmmap.set('hello','world');\n//==============\nconst mmap = new Map(\n['hello','world'],\n[3,5],\n[[1,2],true],\n[true,'nice']\n)\n```","id":"526090bea8024616","x":1988,"y":-930,"width":419,"height":331},
		{"type":"text","text":"# ?. Optional Chain \n>Check the exist of mother object before check deeper element\n\n**Unlike direct access, it will not report error, instead undefined**\n\n```js\nconst test = obj.first?.second\n```","id":"7f2fd4381522f41a","x":1409,"y":-1320,"width":469,"height":281},
		{"type":"text","text":"# set\n```js\nconst numset = new Set([1,2,3,4]);\n```","id":"d75324ffd34ac72c","x":1948,"y":-1250,"width":425,"height":141},
		{"type":"text","text":"# .add()\n```js\nnumset.add(5);\nconsole.log(numset)//1,2,3,4,5\n```","id":"5ede50255234a3e9","x":2755,"y":-1350,"width":425,"height":131},
		{"type":"text","text":"# .has()\n```js\nnumset.has(0);//false\n```","id":"c9d3e9b67fbc0bb7","x":2755,"y":-1109,"width":266,"height":111},
		{"type":"text","text":"# .delete()\n```js\nnumset.delete(3);\nconsole.log(numset)//1,2,4,5\n```","id":"cab381b92ffb6828","x":2748,"y":-969,"width":407,"height":137},
		{"type":"text","text":"# .get()\n```js\nmmap.get('hello');//world\n```","id":"f8bff971967f42ec","x":2755,"y":-765,"width":328,"height":111},
		{"type":"text","text":"# .keys()\n>Get the keys of an array or object","id":"598acdb79c34dc2e","x":3367,"y":-560,"width":400,"height":103},
		{"type":"text","text":"# .entries()\n>Get the entries of an array or object\n\n```js\nconst num = [1,2,3,4,5,6,7,8,9];\nfor(const [key,value] of num.entries()) \n\tconsole.log([key,value]);//[0,1],[1,2]...\n```","id":"db293a2db2e21d23","x":2668,"y":-540,"width":599,"height":225},
		{"type":"text","text":"# .values()\n>Get the values of an array or object","id":"9e553aabf9bb5017","x":3367,"y":-427,"width":346,"height":137},
		{"type":"text","text":"# reverse()\n>reverse the array\n\n```js\nconst num4 = num3.reverse();\nconsole.log(num4)//[4,3,2,1]\n```","id":"86654fc261e2b550","x":2865,"y":1522,"width":351,"height":199},
		{"type":"text","text":"# concat()\n>connect two array\n\n```js\nconst num1 = [1,2];\nconst num2 = [3,4];\nconst num3 = num1.concat(num2);\nconsole.log(num3);//[1,2,3,4]\n//===same as\nconst num3 = [...num1,...num2];\n```","id":"ba817365d97b0857","x":2865,"y":1732,"width":415,"height":297},
		{"type":"text","text":"# at()\n>find the value of the index in the array\n\n```js\nconst arr = ['a', 'b', 'c', 'd', 'e'];\nconst none = arr.at(0);\nconsole.log(none); //a\n//===same as\nconst one = arr[0];\n```","id":"a1ebd96e10a61238","x":2865,"y":2080,"width":423,"height":276},
		{"type":"text","text":"# Array method \n>some array method is same as string method, so the repeat one will not show again.\n\n- `reverse()`\n- `concat()`\n- `at()`\n- `forEach()`\n","id":"26133fafd5d185d7","x":2200,"y":1770,"width":431,"height":286},
		{"type":"text","text":"# forEach()\n>loop the array, get the value, index in it.\n\n**Parameters** :\n- value\n- index\n- array(itself)\n```js\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\nmovements.forEach(function(mov, i, arr){\n  console.log(`${i}: ${mov}`);//0: 200 1: 450\n});\n```","id":"8bb3a068429fd496","x":2865,"y":2420,"width":615,"height":391},
		{"type":"text","text":"# Nullish coalescing operator\n>Only return right hand value if left hand value is `null` or `undefined`\n\n```js\nconst toTest1  = 0 ?? 1;\nconst toTest2  = 0 || 1;\nconsole.log(toTest1,toTest2);//0,1\n```","id":"a593af6554dbd5cc","x":680,"y":-1307,"width":552,"height":256},
		{"type":"text","text":"# map() vs forEach()\n>forEach discard return value, but map doesn't. ","id":"bb2fb4d5d4362829","x":3680,"y":2758,"width":440,"height":106},
		{"type":"text","text":"# map()\n>return a new array based on the array we want some calculate on it.\n\n```js\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\nconst eurToUsd = 1.1;\nconst movementsUSD = movements.map(mov => mov*eurToUsd);\n//===same\nconst movementsUSDfor = [];\nmovements.forEach(mov=>movementsUSDfor.push(mov*eurToUsd));\n```","id":"96a1616834041083","x":2865,"y":2864,"width":687,"height":280},
		{"type":"text","text":"# filter()\n>return an filter array based on the condition we want to filter from original array.\n\n```js\nconst deposits = movements.filter((mov)=>mov>0);\n//===same\nconst depositsFor = [];\nmovements.forEach((mov)=>{\n  if(mov > 0) depositsFor.push(mov);\n  })\n```","id":"efaa3f518bacd503","x":2880,"y":3200,"width":610,"height":294},
		{"type":"text","text":"# reduce()\n>return a value by the calc condition we set for every element of the array.\n\n`acc` : initial value (the 0)\n`cur` : elements of an array\n\n\n```js\nconst balance = movements.reduce((acc,cur,i)=>{\n  console.log(`Iteration ${i} : ${acc}`)\n  return acc + cur;\n},0);\n\nlet balance2 = 0;\nmovements.forEach(mov=>balance2 += mov)\n```","id":"5d85ddc44a4ef0f1","x":2880,"y":3580,"width":560,"height":406},
		{"type":"text","text":"# find()\n>return the first element in the array that follow our condition.\n\n```js\nconst firstMov = movements.find(mov=>mov>0);\nconsole.log(firstMov);\n```","id":"3afbd6ddc2918fbe","x":2880,"y":4040,"width":480,"height":229},
		{"type":"text","text":"# splice()\n>delete or replace specific number of elements of an array by the start index\n\n`splice(start,num,item)`\n`start` : the start index of where you want to implement\n`num` : number of elements you want to manipulate\n`item` : If you want to use replace, then put this.\n**return value** : The deleted array\n```js\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\nmovements.splice(2,3,300); //[200, 450, 300, -130, 70, 1300]\n```","id":"eb603d339df35afc","x":2880,"y":4300,"width":644,"height":373},
		{"type":"text","text":"# findIndex()\n>get the index of the first element which follow the condition in the array\n\n```js\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\nconst mov = movements.findIndex(mov=>mov===450);\nconsole.log(mov);//1\n```","id":"122f88d69cfdc577","x":2880,"y":4720,"width":640,"height":225},
		{"type":"text","text":"# some()\n>Test if at least one element in the array is follow the condition.\n\n```js\nconst anyDeposits = movements.some(mov=>mov>0);\nconsole.log(anyDeposits);//true\n```","id":"1b418d7431bc0246","x":2884,"y":5000,"width":640,"height":199},
		{"type":"text","text":"# every()\n>Test if all elements in the array are follow the condition.\n\n```js\nconst everyDeposits = movements.every(mov=>mov>0);\nconsole.log(everyDeposits);//false\n```","id":"1a4517c2496f047b","x":2884,"y":5240,"width":640,"height":199},
		{"type":"text","text":"# separate call back\n>separate the condition to a single function, make the code easier to read.\n\n```js\nconst judge = mov => mov >0;\nconsole.log(movements.filter(judge));\n```","id":"2f2c273e5760d27e","x":2884,"y":5500,"width":504,"height":229},
		{"type":"text","text":"# flat()\n>Create a new array with origin array with different depth subset.\n\n`flat(depth)` : the depth you want to unfold.\n```js\nconst arr = [[1,2,3],[4,[5,6]],7,8];\nconsole.log(arr.flat(2)); //[1,2,3,4,5,6,7,8]\n```","id":"f5efab82bc1089db","x":2860,"y":5780,"width":580,"height":249},
		{"type":"text","text":"# flatMap()\n>same as flat, but with only depth 1.","id":"0b36edd002252438","x":3524,"y":5849,"width":355,"height":112},
		{"type":"text","text":"# sort()\n>sort an array.\n\n`sort((a,b)=>a-b)` : if `a-b` > 0, then change order. else, keep the order(ascending)\n`sort((a,b)=>b-a)` : descending\n\n```js\n//subtopic : string\nconst owners = ['Jonas','Zach','Adam','Martha'];\nconsole.log(owners.sort());//['Adam', 'Jonas', 'Martha', 'Zach']\n\n//subtopic : number\nconst movements2 = [200, 450, -400, 3000, -650, -130, 70, 1300];\nconsole.log(movements2.sort());//[-130, -400, -650, 1300, 200, 3000, 450, 70]\n\n//subtopic : boolean\nconst x = [true,false];//[false, true]\n```","id":"39c788638b901ac4","x":2884,"y":6160,"width":700,"height":490},
		{"type":"text","text":"# Array()\n>Create a new array\n\n`new Array(length)` : create an empty array with the length\n`new Array(e1,e2,e3,...)` : Create an array based on the parameter","id":"69f0260cd1260ec5","x":2884,"y":6720,"width":512,"height":243},
		{"type":"text","text":"# fill()\n>fill an array with specific value.\n\n```js\nconst x = new Array(7);\nconst y = new Array(7);\nx.fill(1);//[1, 1, 1, 1, 1, 1, 1]\ny.fill(1,3,5);//[empty × 3, 1, 1, empty × 2]\n```","id":"85dd25ad19892068","x":3480,"y":6716,"width":504,"height":251},
		{"type":"text","text":"# from()\n>Created a new array Based on string or function.\n\n```js\nconst s = Array.from('string'); //['s','t',...]\nconst z = Array.from({length:7},()=>1);//[1,1,1,...]\nconst z2 = Array.from({length:7},(_,i)=>i+1);//[1,2,3,...]\n//_ means throw away variable\n```","id":"f3fe26b2dfa02bb3","x":3716,"y":6984,"width":544,"height":251},
		{"type":"text","text":"# Number in JS is not precise\n>Since JS use binary to store float value, so there are some special error in calculating.\n\n```js\nconsole.log(0.1+0.2)//0.30000000000000004\n```","id":"cd37b59e97ebf246","x":5879,"y":-3055,"width":462,"height":252},
		{"type":"text","text":"# Number in JS\n>Number in JS represent as float.\n\n```js\nconsole.log(23.0===23)//true\n```","id":"fd569288bf954e3e","x":5344,"y":-3019,"width":415,"height":179},
		{"type":"text","text":"# Convert string to number\n>When JS see the + sign, it will automatically convert the later string to number\n\n```js\nconsole.log(+'23');//23\n//===same as\nconsole.log(Number('23'));//23\n```","id":"a18a22eeabf2f871","x":5318,"y":-2780,"width":468,"height":256},
		{"type":"text","text":"# Is A Number?\n>There are two ways to check if the object is a number of not(NaN).\n\n```js\nconsole.log(Number.isNaN(20));//false\nconsole.log(Number.isNaN(+'20p'));//true\nconsole.log(Number.isNaN(3/0));//false\nconsole.log(Number.isFinite(30/0));//false\nconsole.log(Number.isFinite(20));//true\n```","id":"5bc47172a69ac579","x":5304,"y":-2460,"width":496,"height":297},
		{"type":"text","text":"# Parsing string to number\n>Another way to convert string to number, but string can contains chars and number have to placed in front of the chars.\n\n```js\nconsole.log(Number.parseInt('30px'));//30\nconsole.log(Number.parseInt('30px',16));//48(with HEX)\nconsole.log(Number.parseInt('3px0'));//3\nconsole.log(Number.parseFloat('2.5rem'));//2.5\n```","id":"5e10f4aa7271ea07","x":5919,"y":-2779,"width":623,"height":255},
		{"type":"text","text":"# PI\n```js\nconsole.log(Math.PI)//3.14159...\n```","id":"6586591ee8ae7356","x":5366,"y":-2020,"width":375,"height":136},
		{"type":"text","text":"# Convert Number to int\n`trunc()` : ignore the float value\n`floor()` : find the largest int less than the int\n`round()` : find the closet int of the int\n`ceil()` : find the smallest int bigger than the int\n\n```js\nconst x = -30.7;\nconsole.log(Math.trunc(x));//-30\nconsole.log(Math.floor(x));//-31\nconsole.log(Math.round(x));//-31\nconsole.log(Math.ceil(x));//-30\n```","id":"e2ca864f7433b123","x":5342,"y":-1799,"width":424,"height":365},
		{"type":"text","text":"# get number in specific digit\n`tofixed(digit)`\n`digit` : the length of the digit you want after float number \n\n```js\nconst y = 1.234567;\nconsole.log(y.toFixed(2));//1.23\nconsole.log(y.toFixed(3));//1.235\nconsole.log(y.toFixed(4));//1.2346\nconsole.log(y.toFixed(5));//1.23457\n```","id":"db5dff57509fb84c","x":5839,"y":-1762,"width":504,"height":290},
		{"id":"aa4b70ccf410ec0e","x":5339,"y":-1320,"width":427,"height":229,"type":"text","text":"# Numeric Separators\n>A way to group large number without syntax error coming with great readability\n\n```js\nconst z = 123_456_789\nconsole.log(z)//123456789\n```\n"},
		{"id":"74ebf1a3f2135d20","x":5280,"y":-976,"width":545,"height":279,"type":"text","text":"# BigInt\n>A new type to store, calculate big int that over `MAX_SAFE_INTEGER` . But cannot calculate with regular int.\n\n```js\nconsole.log(2487923479234792387492374923742947329874n)\nconsole.log(100n+2000n)\nconsole.log(1000n === 1000)//false\nconsole.log(10n/3n)//3n\n```"},
		{"id":"991959d57eef3c3a","x":4640,"y":-3019,"width":356,"height":201,"type":"text","text":"# Date in JS\n>There is a type for date in JS!\n\n```js\nconst now = new Date()\nconsole.log(now)\n```"},
		{"id":"fe719ec9eccb1ff4","x":4595,"y":-2740,"width":446,"height":190,"type":"text","text":"# Get the whole time\n```js\nconst myBirth = new Date(2004,07,19)\nconsole.log(myBirth)//Mon Jul 19 2004 00:00:00 GMT+0800 (Taipei Standard Time)\n\n```"},
		{"id":"7a75af8fedff3f3c","x":4588,"y":-2480,"width":461,"height":291,"type":"text","text":"# Get specific unit in time\n>There are many way to get unit we want in the time.\n\n1. `getFullYear()`\n2. `getMonth()`\n3. ...\n```js\nconsole.log(now.getSeconds());//9\n```"},
		{"id":"11cd2b6c8e0cdbb9","x":4690,"y":-2118,"width":390,"height":280,"type":"text","text":"# Calculate the time\n>There way a cool way to calculate the time.\n\n```js\nconsole.log(new Date(0))\n//Thu Jan 01 1970 08:00:00 GMT+0800 (Taipei Standard Time)\nconsole.log(new Date(3*24*60*60*1000))\n//\n\n```"}
	],
	"edges":[
		{"id":"e0a15b39813d7aad","fromNode":"a884f4db1b953a12","fromSide":"right","toNode":"7c397cc3e8f8735e","toSide":"left"},
		{"id":"cbfac21deb60f6ef","fromNode":"a884f4db1b953a12","fromSide":"right","toNode":"a2002a446c0aeced","toSide":"left"},
		{"id":"c5cc719810f5f030","fromNode":"6f36f9389a07cc25","fromSide":"left","toNode":"a884f4db1b953a12","toSide":"right"},
		{"id":"e7d8670238e7058b","fromNode":"db293a2db2e21d23","fromSide":"right","toNode":"598acdb79c34dc2e","toSide":"left"},
		{"id":"d3bbe6b452b80201","fromNode":"db293a2db2e21d23","fromSide":"right","toNode":"9e553aabf9bb5017","toSide":"left"},
		{"id":"d2b15e3dcef05e2c","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"5ede50255234a3e9","toSide":"left"},
		{"id":"baad42e20cf30fe4","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"c9d3e9b67fbc0bb7","toSide":"left"},
		{"id":"1183b7fc6383d488","fromNode":"d75324ffd34ac72c","fromSide":"right","toNode":"cab381b92ffb6828","toSide":"left"},
		{"id":"ae679fe03392f593","fromNode":"526090bea8024616","fromSide":"right","toNode":"f8bff971967f42ec","toSide":"left"},
		{"id":"734c818f8da4217b","fromNode":"526090bea8024616","fromSide":"right","toNode":"cab381b92ffb6828","toSide":"left"},
		{"id":"48365857e5504ce3","fromNode":"c9d3e9b67fbc0bb7","fromSide":"left","toNode":"526090bea8024616","toSide":"right"},
		{"id":"5ad31fdabb86cb71","fromNode":"526090bea8024616","fromSide":"right","toNode":"db293a2db2e21d23","toSide":"left"},
		{"id":"745a0ffb22e6192a","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"bbedff883f744e22","toSide":"left"},
		{"id":"8c98cecf8805a054","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"69c7f4b2f9015f7c","toSide":"left"},
		{"id":"3dfbe960d9754e58","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"3b26f13817622e8b","toSide":"left"},
		{"id":"7ec3dde37c4c8c50","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"ac024de93f46222e","toSide":"left"},
		{"id":"fb963f429c3368c9","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"06e339737c318edb","toSide":"left"},
		{"id":"f0600b8d28a1ad7e","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"5cda663012af5684","toSide":"left"},
		{"id":"c4ab3067e90bbdb1","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"8eb6ff522fc0d69b","toSide":"left"},
		{"id":"87396cdb34b55566","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"1c2ecd28f892131f","toSide":"left"},
		{"id":"9ddf599e86b62641","fromNode":"16a08ca3cf7c680c","fromSide":"right","toNode":"d9061e01e4a7c29e","toSide":"left"},
		{"id":"fcba8251470aad6b","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"86654fc261e2b550","toSide":"left"},
		{"id":"ad46a8690ced65b0","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"ba817365d97b0857","toSide":"left"},
		{"id":"b909ad06a3c8fe13","fromNode":"9087ca9f860b541d","fromSide":"right","toNode":"ba817365d97b0857","toSide":"left"},
		{"id":"2fc8d2bb6425be46","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"a1ebd96e10a61238","toSide":"left"},
		{"id":"ee299e22406302fb","fromNode":"26133fafd5d185d7","fromSide":"right","toNode":"8bb3a068429fd496","toSide":"left"},
		{"id":"d6eea4d47907f51b","fromNode":"7f2fd4381522f41a","fromSide":"left","toNode":"a593af6554dbd5cc","toSide":"right"},
		{"id":"fb8ffb2f068c9219","fromNode":"8bb3a068429fd496","fromSide":"right","toNode":"bb2fb4d5d4362829","toSide":"left"},
		{"id":"2d176d908cdf5106","fromNode":"96a1616834041083","fromSide":"right","toNode":"bb2fb4d5d4362829","toSide":"left"},
		{"id":"ead0ad1ba05c95cf","fromNode":"f5efab82bc1089db","fromSide":"right","toNode":"0b36edd002252438","toSide":"left"},
		{"id":"71ccff62f36a05ad","fromNode":"fd569288bf954e3e","fromSide":"right","toNode":"cd37b59e97ebf246","toSide":"left"},
		{"id":"0e7dac2f756c65f7","fromNode":"fd569288bf954e3e","fromSide":"bottom","toNode":"a18a22eeabf2f871","toSide":"top"},
		{"id":"3e1a42bbf10bfc05","fromNode":"a18a22eeabf2f871","fromSide":"right","toNode":"5e10f4aa7271ea07","toSide":"left"},
		{"id":"3e038dc6b4e81f68","fromNode":"a18a22eeabf2f871","fromSide":"bottom","toNode":"5bc47172a69ac579","toSide":"top"},
		{"id":"58be3f715b125fbc","fromNode":"5bc47172a69ac579","fromSide":"bottom","toNode":"6586591ee8ae7356","toSide":"top"},
		{"id":"53977f6319ed84b7","fromNode":"6586591ee8ae7356","fromSide":"bottom","toNode":"e2ca864f7433b123","toSide":"top"},
		{"id":"d52e7360db327b4e","fromNode":"e2ca864f7433b123","fromSide":"right","toNode":"db5dff57509fb84c","toSide":"left"},
		{"id":"ac0a1404534266ad","fromNode":"e2ca864f7433b123","fromSide":"bottom","toNode":"aa4b70ccf410ec0e","toSide":"top"},
		{"id":"0baf80544b46cded","fromNode":"aa4b70ccf410ec0e","fromSide":"bottom","toNode":"74ebf1a3f2135d20","toSide":"top"},
		{"id":"ca53e8a00df3f4e0","fromNode":"fd569288bf954e3e","fromSide":"left","toNode":"991959d57eef3c3a","toSide":"right"},
		{"id":"905d23faaaac3623","fromNode":"991959d57eef3c3a","fromSide":"bottom","toNode":"fe719ec9eccb1ff4","toSide":"top"},
		{"id":"0c7f290e371c5218","fromNode":"fe719ec9eccb1ff4","fromSide":"bottom","toNode":"7a75af8fedff3f3c","toSide":"top"},
		{"id":"e1a22a67bbccc32b","fromNode":"7a75af8fedff3f3c","fromSide":"bottom","toNode":"11cd2b6c8e0cdbb9","toSide":"top"}
	]
}