{
	"nodes":[
		{"id":"69b82c797f11bf72","x":-600,"y":-440,"width":465,"height":434,"type":"text","text":"# deque\nlibrary : `<deque>`\n\n`deque<type> va` : create an empty deque of `type`\n`front()` : get the first element of the deque\n`back()` : get the last element of the deque\n`pop_back()` : remove the last element\n`push_back()` : add an element behind last element\n`at(pos)` : get the element at the `pos` position\n`insert(pos,va)` : insert `va` at the `pos` position\n`erase(pos)` :  remove element at the `pos` position\n`begin()` : get the first element's memory locate, often used with `end()` in a loop\n`empty()` : return if the deque is empty\n`clear()` : clean the deque until it's empty\n"},
		{"id":"fbd143e177d54c42","x":-80,"y":-340,"width":477,"height":290,"type":"text","text":"# stack\nlibrary : `<stack>`\n\n`stacl<type> va` : create an empty stack of `type`\n`top()` : get the top element of stack\n`pop()` : remove the top element\n`push()` : accumulate new element\n`empty()` : check the stack if it's empty \n`size()` : get the size of the stack"}
	],
	"edges":[]
}